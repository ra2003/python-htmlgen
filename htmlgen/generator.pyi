import collections
import typing
from typing import Union, Iterator, Optional, List, Iterable

class Generator(collections.Iterable):
    def __iter__(self) -> Iterator[bytes]: ...
    def __str__(self) -> str: ...
    def generate(self) -> typing.Generator[Union[str, bytes, "Generator"], None, None]: ...

class NullGenerator(Generator):
    ...

class IteratorGenerator(Generator):
    def __init__(self, iterator: Iterable[Union[str, bytes, Generator]]) -> None: ...

class ChildGenerator(Generator, collections.Sized):
    def __init__(self) -> None: ...
    def __len__(self) -> int: ...
    def append(self, child: Optional[Union[str, bytes, Generator]]) -> None: ...
    def extend(self, children: Iterable[Union[str, bytes, Generator]]) -> None: ...
    def remove(self, child: Union[str, bytes, Generator]) -> None: ...
    def empty(self) -> None: ...
    @property
    def children(self) -> List[Union[str, bytes, Generator]]: ...

class HTMLChildGenerator(Generator, collections.Sized):
    def __init__(self) -> None: ...
    def __len__(self) -> int: ...
    def append(self, child: Optional[Union[str, bytes, Generator]]) -> None: ...
    def append_raw(self, child: Union[str, bytes, Generator]) -> None: ...
    def extend(self, children: Iterable[Union[str, bytes, Generator]]) -> None: ...
    def extend_raw(self, children: Iterable[Union[str, bytes, Generator]]) -> None: ...
    def remove(self, child: Union[str, bytes, Generator]) -> None: ...
    def remove_raw(self, child: Union[str, bytes, Generator]) -> None: ...
    def empty(self) -> None: ...
    @property
    def children(self) -> List[Union[str, bytes, Generator]]: ...

def generate_html_string(s: Union[str, bytes, Generator]) -> HTMLChildGenerator: ...

class JoinGenerator(ChildGenerator):
    def __init__(self, glue: Union[str, bytes, Generator], pieces: Optional[Iterable[Union[str, bytes, Generator]]] = ...) -> None: ...

class HTMLJoinGenerator(HTMLChildGenerator):
    def __init__(self, glue: Union[str, bytes, Generator], pieces: Optional[Iterable[Union[str, bytes, Generator]]] = ...) -> None: ...
